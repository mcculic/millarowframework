<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Millarow.Presentation.WPF.Controls">

    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <Style x:Key="CustomWindowButtonStyle" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Label Name="lbl" Padding="{TemplateBinding Padding}" Background="Transparent"
                           Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lbl" Property="Background" Value="#FFFFFF" />
                            <Setter Property="Foreground" Value="#007ACC" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="lbl" Property="Background" Value="#007ACC" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomWindowSystemButtonStyle" TargetType="Button" BasedOn="{StaticResource CustomWindowButtonStyle}" />

    <Style x:Key="CustomWindowSystemButtonPathStyle" TargetType="Path">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
    </Style>

    <ControlTemplate x:Key="CustomWindowTemplate" TargetType="{x:Type Controls:CustomWindow}">
        <AdornerDecorator>
            <Grid Name="LayoutRoot">
                <DockPanel Background="Transparent">
                    <Border DockPanel.Dock="Top" Background="{TemplateBinding TitleBarBackground}" Height="{TemplateBinding TitleBarHeight}">
                        <Grid Name="PART_TitleBar" WindowChrome.IsHitTestVisibleInChrome="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Image Grid.Column="0" Source="{TemplateBinding TitleBarIcon}" Name="PART_Icon"
                                   Visibility="{TemplateBinding ShowIcon, Converter={StaticResource VisibilityConverter}}"
                                   Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}"
                                   Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   SnapsToDevicePixels="True" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="Linear" />

                            <ContentControl Grid.Column="1" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Focusable="False">
                                <ContentControl.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Foreground" Value="White" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Name="Bd" Background="Transparent" Padding="5,3,5,3">
                                                        <ContentPresenter ContentSource="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </Border>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Bd" Property="Background" Value="#80CBEB" />
                                                        </Trigger>

                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="Bd" Property="Background" Value="#086F9E" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ContentControl.Resources>
                            </ContentControl>

                            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button Name="Minimize" Command="{TemplateBinding MinimizeCommand}" Style="{StaticResource CustomWindowSystemButtonStyle}" Width="{TemplateBinding TitleBarHeight}" >
                                    <Path Data="F1M0,6L0,9 9,9 9,6 0,6z" Style="{StaticResource CustomWindowSystemButtonPathStyle}" />
                                </Button>

                                <Button Name="Maximize" Command="{TemplateBinding MaximizeCommand}" Style="{StaticResource CustomWindowSystemButtonStyle}" Width="{TemplateBinding TitleBarHeight}" >
                                    <Path Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" Style="{StaticResource CustomWindowSystemButtonPathStyle}" />
                                </Button>

                                <Button Name="Restore" Command="{TemplateBinding RestoreCommand}" Style="{StaticResource CustomWindowSystemButtonStyle}" Width="{TemplateBinding TitleBarHeight}">
                                    <Path Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" Style="{StaticResource CustomWindowSystemButtonPathStyle}" />
                                </Button>

                                <Button Name="Close" Command="{TemplateBinding CloseCommand}" Style="{StaticResource CustomWindowSystemButtonStyle}" Width="{TemplateBinding TitleBarHeight}">
                                    <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" Style="{StaticResource CustomWindowSystemButtonPathStyle}" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ClipToBounds="True" />
                    </Border>
                </DockPanel>

                <!--<Path Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1"
                      Stroke="Gray" StrokeThickness="1" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                      Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />-->
            </Grid>
        </AdornerDecorator>

        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                <Setter TargetName="LayoutRoot" Property="Margin" Value="{Binding MaximizedMargin, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>

            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Minimize" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="ResizeMode" Value="CanMinimize">
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="ShowMaximizeButton" Value="False">
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Controls:CustomWindow}" TargetType="{x:Type Controls:CustomWindow}">
        <Setter Property="Template" Value="{StaticResource CustomWindowTemplate}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
        <Setter Property="TitleBarHeight" Value="28" />
        <Setter Property="TitleBarBackground" Value="#4BA2D8" />
        <Setter Property="TitleBarForeground" Value="White" />
        <Setter Property="IconWidth" Value="20" />
        <Setter Property="IconHeight" Value="20" />
        <Setter Property="ShowIcon" Value="False" />
        <Setter Property="Header" Value="{Binding Title, RelativeSource={RelativeSource Self}}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="7,-2,0,0" Text="{Binding}" 
                               FontSize="14" FontFamily="Segoe UI" 
                               Foreground="White" VerticalAlignment="Center" 
                               WindowChrome.IsHitTestVisibleInChrome="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" ResizeBorderThickness="4" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>